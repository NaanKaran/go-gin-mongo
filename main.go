package main

import (
	"fmt"
	"go-gin-mongo/db"
	"go-gin-mongo/logger"
	"go-gin-mongo/routes"
	"log"
	"os"

	"github.com/joho/godotenv"

	_ "go-gin-mongo/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @title           Go Gin Mongo API
// @version         1.0
// @description     A simple user authentication API using Go Gin and MongoDB
// @host            localhost:8080
// @BasePath        /api
// @schemes         http

func main() {
	// Initialize logger
	logger.InitLogger()
	defer logger.CloseLogger()

	// Catch panics
	defer func() {
		if r := recover(); r != nil {
			logger.Logger.Println("Panic recovered:", r)
		}
	}()

	// Optional: log build time and process info
	logger.Logger.Println("Starting application... PID:", os.Getpid())
	logger.Logger.Println("OS:", os.Getenv("OS"))
	logger.Logger.Println("----Application started successfully----")
	// Load environment variables from .env file
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error loading .env file")
	}
	serverPort := os.Getenv("SERVER_PORT")
	db.ConnectDB()

	r := gin.Default()
	routes.UserRoutes(r)

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	r.Run(fmt.Sprintf(":%s", serverPort)) // listen and serve on
}
